{"version":3,"file":"my-element.js","sources":["../../../src/components/my-element/my-element.ts"],"sourcesContent":["import { html, LitElement, unsafeCSS } from 'lit'\nimport { customElement, property, state } from 'lit/decorators.js'\n// import styles from './my-element.scss?inline'\n\n@customElement('my-element')\nexport class MyElement extends LitElement {\n  // static styles = unsafeCSS(styles)\n\n  @property() name = 'World'\n\n  @state() count: number = 0\n\n  private _onClick() {\n    this.count++\n  }\n\n  render() {\n    return html`\n      <h1>Hello, ${this.name}!</h1>\n      <button @click=${this._onClick} type=\"button\">\n        Click Count: ${this.count}\n      </button>\n      <slot></slot>\n    `\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-element': MyElement\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAKa,IAAA,YAAN,cAAwB,WAAW;AAAA,EAAnC,cAAA;AAAA,UAAA,GAAA,SAAA;AAGc,SAAA,OAAA;AAEM,SAAA,QAAA;AAAA,EAAA;AAAA,EAEjB,WAAW;AACZ,SAAA;AAAA,EACP;AAAA,EAEA,SAAS;AACA,WAAA;AAAA,mBACQ,KAAK,IAAI;AAAA,uBACL,KAAK,QAAQ;AAAA,uBACb,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA,EAI/B;AACF;AAjBc,gBAAA;AAAA,EAAX,SAAS;AAAA,GAHC,UAGC,WAAA,QAAA,CAAA;AAEH,gBAAA;AAAA,EAAR,MAAM;AAAA,GALI,UAKF,WAAA,SAAA,CAAA;AALE,YAAN,gBAAA;AAAA,EADN,cAAc,YAAY;AAAA,GACd,SAAA;"}